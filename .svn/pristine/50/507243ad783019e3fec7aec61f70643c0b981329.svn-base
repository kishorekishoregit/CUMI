using JKWOODSENTITY;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Transactions;

namespace JKWOODSDAC
{
    public partial class WMSDAL
    {
        public ResponseQCEntry FetchQCEntryPageLoadDAL()
        {
            ResponseQCEntry response = new ResponseQCEntry();
            response.ErrorContainer = new List<ErrorItem>();
            try
            {
                using (TransactionScope scope = new TransactionScope())
                {
                    using (SqlConnection con = new SqlConnection(connectionstring))
                    {
                        SqlCommand cmd = new SqlCommand("[TRANSACTIONS].[QCENTRY_FETCH]", con);
                        cmd.CommandType = CommandType.StoredProcedure;
                        con.Open();
                        SqlDataAdapter oda = new SqlDataAdapter(cmd);
                        DataSet ds = new DataSet();
                        oda.Fill(ds);
                        if (ds != null)
                        {
                            response.JS_QCEntrydetails = ds.Tables[0];
                            response.result = true;
                        }
                        scope.Complete();
                    }
                }

            }
            catch (Exception ex)
            {
                string responsetime = DateTime.Now.ToString("yyyy MM dd hh:mm:ss.fff tt");
                string responselog = createlog("FetchQCEntryPageLoadDAL: " + "Method Name FetchQCEntryPageLoadDAL" + " -- " + ex.StackTrace + "-- " + ex.Source + " -- " + ex.Message);
                response.ErrorContainer.Add(new ErrorItem { DataItem = responselog, ErrorNo = "LWMS00000" });
                response.result = false;
            }

            return response;
        }
        public ResponseQCEntry InsertQCEntryDAL(RequestQCEntry request)
        {
            ResponseQCEntry response = new ResponseQCEntry();
            response.ErrorContainer = new List<ErrorItem>();
            int rowcount = 0;
            DataSet ds = new DataSet();
            try
            {
                using (TransactionScope scope = new TransactionScope())
                {
                    using (SqlConnection con = new SqlConnection(connectionstring))
                    {
                        //SqlCommand cmd = new SqlCommand("[TRANSACTIONS].[QCENTRY_INSERT]", con);
                        //cmd.CommandType = CommandType.StoredProcedure;
                        //cmd.Parameters.Add(new SqlParameter("@PRNNO", request.requestQCEntry.PRNNO.Trim()));
                        //cmd.Parameters.Add(new SqlParameter("@PARTNAME", request.requestQCEntry.PARTNAME.Trim()));
                        //cmd.Parameters.Add(new SqlParameter("@CUSTOMER", request.requestQCEntry.CUSTOMER.Trim()));
                        //cmd.Parameters.Add(new SqlParameter("@MODEL", request.requestQCEntry.MODEL.Trim()));
                        //cmd.Parameters.Add(new SqlParameter("@VARIANT", request.requestQCEntry.VARIANT.Trim()));
                        //cmd.Parameters.Add(new SqlParameter("@LOTNO", request.requestQCEntry.LOTNO.Trim()));

                        //cmd.Parameters.Add(new SqlParameter("@QUANTITY", request.requestQCEntry.QUANTITY.Trim()));
                        //cmd.Parameters.Add(new SqlParameter("@REJECTEDQUANTITY", request.requestQCEntry.REJECTEDQUANTITY.Trim()));
                        //cmd.Parameters.Add(new SqlParameter("@REMARKS", request.requestQCEntry.REMARKS.Trim()));
                        //cmd.Parameters.Add(new SqlParameter("@LOTSTATUS", request.requestQCEntry.LOTSTATUS.Trim()));
                        //con.Open();
                        //SqlDataAdapter oda = new SqlDataAdapter(cmd);
                        //DataSet ds = new DataSet();
                        //oda.Fill(ds);
                        //if (ds != null)
                        //{
                        //    if (ds.Tables[0].Rows[0][0].ToString() == "SUCCESS")
                        //        response.result = true;
                        //    else
                        //        response.result = false;

                        //    response.JS_QCEntrydetails = ds.Tables[1];
                        //    response.ErrorContainer.Add(new ErrorItem { ErrorNo = ds.Tables[0].Rows[0][1].ToString(), DataItem = request.requestQCEntry.LOTNO });
                        //}
                        foreach (QCEntryDetailEntity det in request.requestqcentrydetails)
                        {

                            SqlCommand cmd = new SqlCommand("[TRANSACTIONS].[QCENTRY_INSERT]", con);
                            cmd.CommandType = CommandType.StoredProcedure;
                            cmd.Parameters.Add(new SqlParameter("@PRNNO", det.PRNNO.Trim()));
                            cmd.Parameters.Add(new SqlParameter("@PARTNAME", det.PARTNAME.Trim()));
                            cmd.Parameters.Add(new SqlParameter("@CUSTOMER", det.CUSTOMER.Trim()));
                            cmd.Parameters.Add(new SqlParameter("@MODEL", det.MODEL.Trim()));
                            cmd.Parameters.Add(new SqlParameter("@VARIANT", det.VARIANT.Trim()));
                            cmd.Parameters.Add(new SqlParameter("@LOTNO", det.LOTNO.Trim()));

                            cmd.Parameters.Add(new SqlParameter("@QUANTITY", det.QUANTITY.Trim()));
                            cmd.Parameters.Add(new SqlParameter("@REJECTEDQUANTITY", det.REJECTEDQUANTITY.Trim()));
                            cmd.Parameters.Add(new SqlParameter("@REMARKS", det.REMARKS.Trim()));
                            cmd.Parameters.Add(new SqlParameter("@LOTSTATUS", det.LOTSTATUS.Trim()));
                            SqlDataAdapter oda = new SqlDataAdapter(cmd);

                            oda.Fill(ds);
                            if (ds != null)
                            {
                                if (ds.Tables[0].Rows[ds.Tables[0].Rows.Count - 1][0].ToString() == "SUCCESS")
                                {
                                    rowcount++;
                                }
                            }
                        }
                        if (ds != null)
                        {
                            if (request.requestqcentrydetails.Count == rowcount)
                            {
                                scope.Complete();
                                response.result = true;
                            }
                            else
                            {
                                response.result = false;
                                //  response.ErrorContainer.Add(new ErrorItem { ErrorNo = ds.Tables[0].Rows[0][1].ToString(), DataItem = request.requestRMQuality.LOTNO });
                            }
                            response.JS_QCEntrydetails = ds.Tables[1];
                            response.ErrorContainer.Add(new ErrorItem { ErrorNo = ds.Tables[0].Rows[ds.Tables[0].Rows.Count - 1][1].ToString(), DataItem = request.requestQCEntry.LOTNO });
                        }
                    }
                   // scope.Complete();
                }
            }
            catch (Exception ex)
            {
                string responsetime = DateTime.Now.ToString("yyyy MM dd hh:mm:ss.fff tt");
                string responselog = createlog("InsertQCEntryDAL: " + "Method Name InsertQCEntryDAL" + " -- " + ex.StackTrace + "-- " + ex.Source + " -- " + ex.Message);
                response.ErrorContainer.Add(new ErrorItem { DataItem = responselog, ErrorNo = "LWMS00000" });
                response.result = false;
            }

            return response;

        }

    }
}

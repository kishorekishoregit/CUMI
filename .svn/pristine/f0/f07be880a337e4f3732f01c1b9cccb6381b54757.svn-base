jQuery(function ($) {

    function getmonth() {
        var today = new Date();

        var dd = today.getDate() > 9 ? today.getDate() : '0' + today.getDate();
        var mm = today.getMonth(); //January is 0!
        var months = ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"];
        var yyyy = today.getFullYear();

        var today = dd + '/' + months[mm] + '/' + yyyy;
        $("#txtprndate").val(today);
    }

    BindTable();

    function BindTable() {

        var table = document.getElementById("dynamic-table-print");
        var cols = [];
        var cols1 = [];
        var cols1DATA = [];
        var nullvalue;
        var colsresult;
        var finalcolsresult;
        getmonth();
        var RoleDatatable = $('#dynamic-table-print');
        $(".loader").show("slow");
        $.ajax({
            url: 'GetPRNEntryPageLoad',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (Result) {

                var pageload = Result.split('|');

                var partdts = JSON.parse(pageload[0]);
                var customerdts = JSON.parse(pageload[1]);
                var prngriddts = JSON.parse(pageload[2]);
                var prnnoget = JSON.parse(pageload[3]);


                $("#ddlpartname").empty().append('<option value="">Select an Option</option>');
                $.each(partdts, function () {
                    $("#ddlpartname").append($("<option></option>").val(this["ITEMNAME"]).html(this["ITEMNAME"]));
                    $('#ddlpartname').trigger("chosen:updated");
                });

                $("#ddlcustomer").empty().append('<option value="">Select an Option</option>');
                $.each(customerdts, function () {
                    $("#ddlcustomer").append($("<option></option>").val(this["CUSTOMERNAME"]).html(this["CUSTOMERNAME"]));
                    $('#ddlcustomer').trigger("chosen:updated");
                });

                $('#txtprnno').val(prnnoget[0].PRNNO);
                BindTab(prngriddts, '1');
            }
        });
        $(".loader").hide("slow");
    }

    $('#btnadd').click(function (event) {
        var errormessage = "";
        if ($('#ddlpartname').val() == "") {
            errormessage += "Please Select Part Name.\n";
        }
        if ($('#ddlcustomer').val() == "") {
            errormessage += "Please Select Customer.\n";
        }
        if ($('#txtlotno').val() == "") {
            errormessage += "Please Enter Quantity.\n"
        }
        if ($('#txtquantity').val() == "") {
            errormessage += "Please Enter Quantity.\n"
        }
       
       
       

        if (errormessage.length == 0) {
                     
            var action = $('#actiontypeaddd').html();

                $(".loader").show("slow");

                if (window.FormData !== undefined) {

                    var formData = new FormData();
                    formData.append('PARTNAME', $('#ddlpartname').val());
                    formData.append('CUSTOMER', $('#ddlcustomer').val());
                    formData.append('MODEL', $('#ddlmodel').val());
                    formData.append('VARIANT', $('#ddlvariant').val());
                    formData.append('LOTNO', $('#txtlotno').val());
                    //formData.append('INNERQUANTITY', $('#txtinquantity').val());
                    //formData.append('OUTERQUANTITY', $('#txtoutquantity').val());
                    //formData.append('LHQUANTITY', $('#txtlhquantity').val());
                    //formData.append('RHQUANTITY', $('#txtrhquantity').val());
                    formData.append('QUANTITY', $('#txtquantity').val());
                    formData.append('REMARKS', $('#txtremarks').val());
                   
                    formData.append('action', action);
                    $.ajax({
                        url: 'AddPRNInventoryDetails',
                        type: "POST",
                        contentType: false, // Not to set any content header  
                        processData: false, // Not to process data  
                        data: formData,
                        success: function (result) {
                            var results = result.split('|');
                            printload = JSON.parse(results[1]);
                            if (results[0] == 'true') {
                                if ($('#actiontypeaddd').html() == "Update")
                                    $('#actiontypeaddd').html("Add");
                                BindChildTab(printload, '1');
                                reset();
                            }
                            else {
                                $('.loadingGIF').hide();
                                sweetAlert("", results[1].replace(/&quot;/g, "").replace(/<Br \/>/g, "\n"), "error");
                                //bootbox.alert({
                                //    message: '<span class="text-danger"><i class="ace-icon fa fa-exclamation-triangle fa-4x"></i><br>' + results[1] + '</span>',
                                //    size: 'small'
                                //});
                            }
                        },
                        error: function (err) {
                            //alert(err.statusText);
                        }
                    });
                 
                }
                   
        }

        else {
            //bootbox.alert({
            //    message: '<span class="text-danger"><i class="ace-icon fa fa-exclamation-triangle fa-4x"></i><br>' + errormessage + '</span>',
            //    size: 'small'
            //});
            $('.loadingGIF').hide();
            sweetAlert("", errormessage.replace(/&quot;/g, "").replace(/<Br \/>/g, "\n"), "error");
        }
      
    });
    function BindChildTab(ResData, type) {

        var cols = [];
        var cols1 = [];
        var cols1DATA = [];
        var nullvalue;
        var colsresult;
        var finalcolsresult;
        var elements = Array();
        var exampleRecord = ResData[0];
        var rcount = $("#dynamic-table-details > tbody > tr").length
        // TABLE BIND     
        if (rcount > 0) {
            $('#dynamic-table-details').dataTable().fnDestroy();
            $('#dynamic-table-details').DataTable().destroy(); $('#dynamic-table-details').html('');
            cols.length = 0;
            cols1.length = 0;
        }
        if (exampleRecord) {
            //get keys in object. This will only work if your statement remains true that all objects have identical keys
            var keys = Object.keys(exampleRecord);

            //for each key, add a column definition
            keys.forEach(function (k) {
                cols.push({
                    
                    title: k,
                    data: k,
                    targets: k

                });
            });

            $.each(cols, function (index, item) {

                item.title, item.targets

                cols1.push({

                    title: item.title,
                    targets: index
                });
                cols1DATA.push({
                    data: item.title,
                });
                finalcolsresult += 'null' + ',';

            });

            $('#dynamic-table-details').dataTable({
                data: ResData,
                "bAutoWidth": false,
                "ascrollX": "100%",
                "bPaginate": false,
                "bSort": false,
                "bInfo": false,
                "bFilter": false,
                "aColumns": [
          finalcolsresult,
          { "bSortable": false }
                ],
                "aSorting": [],
                'columnDefs': [{
                    'targets': 0,
                    'searchable': false,
                    'orderable': false,
                    'className': 'dt-body-center'
                }],

                columnDefs: cols1,

                columns: [
                   { 'data': 'PARTNAME' },
                    { 'data': 'CUSTOMER' },
                    { 'data': 'MODEL' },
                    { 'data': 'VARIANT' },
                   { 'data': 'LOTNO' },
                    //{ 'data': 'INNERQUANTITY' },
                    //{ 'data': 'OUTERQUANTITY' },
                    //{ 'data': 'LHQUANTITY' },
                    //{ 'data': 'RHQUANTITY' },
                   { 'data': 'QUANTITY' },
                   { 'data': 'REMARKS' },
                   {

                       'data': 'Remove',
                       'render': function (data, type, full, meta) {

                           return '<button type="button" class="btn btn-danger btn-fab remove" id="Edit" data-toggle="tooltip" data-placement="top" title="Edit"><i class="fa fa-trash" aria-hidden="true"></i></button>'

                       }
                    },

                    {

                        'data': 'Edit',
                        'render': function (data, type, full, meta) {

                            return '<button type="button" class="btn btn-success btn-fab edit" id="Edit" data-toggle="tooltip" data-placement="top" title="Edit"><i class="fa fa-edit" aria-hidden="true"></i></button>'

                        }
                    },
                   
                ],

            });


            $("#dynamic-table-details").on("click", ".edit", function () {
                var $row = $(this).closest("tr");    // Find the row
                var $text = $row.find(".sorting_1").text(); // Find the text         
                var Code = $(this).closest('tr').find('td:eq(0)').html();
                var Customer = $(this).closest('tr').find('td:eq(1)').html();
                var Model = $(this).closest('tr').find('td:eq(2)').html();
                var Varient = $(this).closest('tr').find('td:eq(3)').html();
                var LotNo = $(this).closest('tr').find('td:eq(4)').html();
                var Quantity = $(this).closest('tr').find('td:eq(5)').html();
                var Remarks = $(this).closest('tr').find('td:eq(6)').html();
          
                $('#ddlpartname').val(Code);
                $('#ddlpartname').trigger("chosen:updated");
                $('#ddlpartname').prop('disabled', true);

                $('#ddlcustomer').val(Customer);
                $('#ddlcustomer').trigger("chosen:updated");

                $('#ddlmodel').val(Model);
                $('#ddlmodel').trigger("chosen:updated");

                $('#ddlvariant').val(Varient);
                $('#ddlvariant').trigger("chosen:updated");

                $('#txtquantity').val(Quantity);
                $('#txtremarks').val(Remarks);
                $('#txtlotno').val(LotNo);
                $('#actiontypeaddd').html("Update");

            });

        }
        else {
            $('#dynamic-table-details tbody').remove();
            $('#dynamic-table-details thead').remove();
            $('#dynamic-table-details').dataTable({
                "language": {
                    "emptyTable": "PRN Details No Records Found.."
                },
                'bSort': false,
                'aoColumns': [
                        { sWidth: "100%", bSearchable: false, bSortable: false },
                         { sWidth: "100%", bSearchable: false, bSortable: false },
                            { sWidth: "100%", bSearchable: false, bSortable: false },
                            { sWidth: "100%", bSearchable: false, bSortable: false },
                            { sWidth: "100%", bSearchable: false, bSortable: false },
                          
                           { sWidth: "100%", bSearchable: false, bSortable: false },
                           { sWidth: "100%", bSearchable: false, bSortable: false },
                           { sWidth: "100%", bSearchable: false, bSortable: false }

                ],
                "scrollCollapse": false,
                "info": false,
                "paging": false,
                "searching": true
            });

        }
        
    }


    $('#btnsubmit').click(function () {

        if (window.FormData !== undefined) {
            $('.loadingGIF').show()
            var formData = new FormData();
            formData.append('PRNNO', $('#txtprnno').val());
            formData.append('PRNDATE', $('#txtprndate').val());
        
            formData.append('actiontype', $('#actiontype').text());
            $(".loader").show("slow");
            $.ajax({
                url: 'InsertPRNDetails',
                dataType: "json",
                type: "POST",
                contentType: false, // Not to set any content header  
                processData: false, // Not to process data  

                data: formData,
                success: function (data) {
                    var Res = data.split('|');
                    var result = Res[0];
                    var msg = Res[1];
                    if (result.toUpperCase() == "TRUE") {
                        $("form").trigger("reset");
                        $("#actiontype").text("Save")

                        sweetAlert("", msg.replace(/&quot;/g, "").replace(/<Br \/>/g, "\n"), "success");
                        Clear();
                       
                    }
                   
                    else {
                        $('.loadingGIF').hide();
                        sweetAlert("", msg.replace(/&quot;/g, "").replace(/<Br \/>/g, "\n"), "error");
                    }
                }
            });
        }

    });

    function BindTab(ResData, type) {

        var currentDate = new Date()
        var day = currentDate.getDate()
        var month = currentDate.getMonth() + 1
        var year = currentDate.getFullYear()
        var currentdate = day + "/" + month + "/" + year;

        var cols = [];
        var cols1 = [];
        var cols1DATA = [];
        var nullvalue;
        var colsresult;
        var finalcolsresult;
        var elements = Array();
        var exampleRecord = ResData[0];
        // TABLE BIND     
        if (type == '0') {
            $('#dynamic-table').dataTable().fnDestroy();
            cols.length = 0;
            cols1.length = 0;
        }
        if (exampleRecord) {
            //get keys in object. This will only work if your statement remains true that all objects have identical keys
            var keys = Object.keys(exampleRecord);

            //for each key, add a column definition
            keys.forEach(function (k) {
                cols.push({
                    title: k,
                    data: k,
                    targets: k

                    //optionally do some type detection here for render function
                });
            });

            $.each(cols, function (index, item) {

                item.title, item.targets

                cols1.push({
                    title: item.title,
                    targets: index

                });

                cols1DATA.push({
                    data: item.title,
                });
                finalcolsresult += 'null' + ',';

            });

            var dyTable = $('#dynamic-table');

            $('#dynamic-table').dataTable({
                data: ResData,
                "bAutoWidth": false,
                "ascrollX": "100%",
                "aColumns": [
          finalcolsresult,
          { "bSortable": false }
                ],
                "aSorting": [],
                'columnDefs': [{
                    'targets': 0,
                    'searchable': true,
                    'orderable': true,
                    'className': 'dt-body-center'
                }],

                columnDefs: cols1,
                // columns: cols1DATA,
                columns: [

                    { 'data': 'PRN No' },
                    { 'data': 'PRN Date' },
                   {

                       'data': 'View',
                       'render': function (data, type, full, meta) {

                           return '<button type="button" class="btn btn-success btn-fab searchdetails" id="Edit" data-toggle="tooltip" data-placement="top" title="Edit"><i class="fa fa-search" aria-hidden="true"></i></button>'

                       }
                   },
                    {

                        'data': 'Edit',
                        'render': function (data, type, full, meta) {

                            return '<button type="button" class="btn btn-success btn-fab Edit" id="Edit" data-toggle="tooltip" data-placement="top" title="Edit"><i class="fa fa-edit" aria-hidden="true"></i></button>'

                        }
                    },
                    

                ],
                dom: 'Bfrtip',
                buttons: [

                    {
                        extend: 'excelHtml5',
                        title: 'PRN Details',
                        text: '<img src="../../Images/excel.png" style="height: 25px;">',
                        footer: false
                    },
                    {
                        extend: 'pdfHtml5',

                        text: '<img src="../../Images/pdf.png" style="height: 25px;">',
                        orientation: 'landscape',
                        pageSize: 'A4',
                        footer: false,
                        title: 'PRN Details'


                    }, {
                        extend: 'print',
                        title: 'PRN Details',
                        text: '<img src="../../Images/print.png" style="height: 25px;">',
                        footer: false
                    }
                ]
                
            });

            $("#dynamic-table").on("click", ".searchdetails", function () {
                var $row = $(this).closest("tr");    // Find the row
                var $text = $row.find(".sorting_1").text(); // Find the text
                $('#modalview').modal('show');
                callpopup($text);
            });
            $("#dynamic-table").on("click", ".Edit", function () {
                var $row = $(this).closest("tr");    // Find the row
                var $text = $row.find(".sorting_1").text(); // Find the text              
                searchbyGrnNo($text);
            });


        }
        else {
            $('#dynamic-table tbody').remove();
            $('#dynamic-table thead').remove();
            $('#dynamic-table').dataTable({
                "language": {
                    "emptyTable": "PRN No records found.."
                },
                'bSort': false,
                'aoColumns': [
                            { sWidth: "10%", bSearchable: false, bSortable: false },
                            { sWidth: "10%", bSearchable: false, bSortable: false },
                            { sWidth: "10%", bSearchable: false, bSortable: false },
                            { sWidth: "10%", bSearchable: false, bSortable: false },
                            { sWidth: "10%", bSearchable: false, bSortable: false },
                            { sWidth: "10%", bSearchable: false, bSortable: false }

                ],
                "scrollCollapse": false,
                "info": true,
                "paging": true,
                "searching": true
            });


        }
        $(".loader").hide("slow");
    }
    function callpopup($text) {
        $(".loader").show("slow");
        $.ajax({
            url: 'PRNViewDts',
            dataType: 'json',
            type: 'POST',
            data: { "PRNNO": $text },

            success: function (data) {
                debugger;
                var Tables = data;
                var PRNItemDetails = JSON.parse(Tables);
                debugger;
                BindPopupTab(PRNItemDetails, '1');
                $("html, body").animate({ scrollTop: 0 }, "slow");

            }
        });
        $(".loader").hide("slow");
    }
    function BindPopupTab(ResData, type) {

        var cols = [];
        var cols1 = [];
        var cols1DATA = [];
        var nullvalue;
        var colsresult;
        var finalcolsresult;
        var elements = Array();
        var exampleRecordUpload = ResData[0];
        // TABLE BIND
        var len = $('#dynamic-tableDetails tbody').children().length;
        if (type == '0' || len != '0') {
            $('#dynamic-tableDetails').dataTable().fnDestroy();
            cols.length = 0;
            cols1.length = 0;
        }
        if (exampleRecordUpload) {
            //get keys in object. This will only work if your statement remains true that all objects have identical keys
            var keys = Object.keys(exampleRecordUpload);

            //for each key, add a column definition
            keys.forEach(function (k) {

                cols.push({
                    title: k,
                    data: k,
                    targets: k

                    //optionally do some type detection here for render function
                });
            });

            $.each(cols, function (index, item) {

                item.title, item.targets

                cols1.push({
                    title: item.title,
                    targets: index

                });

                cols1DATA.push({
                    data: item.title,
                });
                finalcolsresult += 'null' + ',';

            });

            //  var dyTable1 = $('#dynamic-tableUpload');

            $('#dynamic-tableDetails').dataTable({
                data: ResData,
                "bAutoWidth": false,
                "ascrollX": "100%",
                "aColumns": [
          finalcolsresult,
          { "bSortable": false }
                ],
                "aSorting": [],
                'columnDefs': [{
                    'targets': 0,
                    'searchable': false,
                    'orderable': false,
                    'className': 'dt-body-center'
                }],

                columnDefs: cols1,
                columns: cols1DATA

            });
        }
        else {
            $('#dynamic-tableDetails tbody').remove();
            $('#dynamic-tableDetails thead').remove();
            $('#dynamic-tableDetails').dataTable({
                "language": {
                    "emptyTable": "No records found.."
                },
                'bSort': false,
                'aoColumns': [
                        { sWidth: "10%", bSearchable: false, bSortable: false },
                          { sWidth: "10%", bSearchable: false, bSortable: false },
                            { sWidth: "10%", bSearchable: false, bSortable: false },
                             { sWidth: "10%", bSearchable: false, bSortable: false },
                             { sWidth: "10%", bSearchable: false, bSortable: false },
                             { sWidth: "10%", bSearchable: false, bSortable: false },
                             { sWidth: "10%", bSearchable: false, bSortable: false }
                ],
                "scrollCollapse": false,
                "info": false,
                "paging": false,
                "searching": false
            });


        }

    }

    function searchbyGrnNo($text) {
        $(".loader").show("slow");
        $.ajax({
            url: 'PRNEditDts',
            dataType: 'json',
            type: 'POST',
            data: { "PRNNO": $text },
            success: function (result) {
                //debugger;
                var Tables = result.split('|');
                var PrnHeader = JSON.parse(Tables[0]);
                var adddetails = JSON.parse(Tables[1]);
                $('#txtprnno').val(PrnHeader[0].PRNNO);
                $('#txtprndate').val(PrnHeader[0].PRNDATE);
             
                $('#txtprnno').prop('disabled', true);
                $('#actiontype').html("Update");
                BindChildTab(adddetails, '1');
            }
        });
        $(".loader").hide("slow");
    }

    $("#dynamic-table-details").on("click", ".remove", function () {
        var Code = $(this).closest('tr').find('td:eq(4)').html();

        $.ajax({
            url: 'PRNDeleteRow',
            dataType: "json",
            type: "POST",
            data: $.param({ 'Code': Code }),

            success: function (result) {

                BindChildTab(JSON.parse(result), '1');

            }
        });

    });
    function reset() {
        $('#ddlpartname').val('');
        $('#ddlpartname').trigger("chosen:updated");
        $('#ddlcustomer').val('');
        $('#ddlcustomer').trigger("chosen:updated");
        //$('#txtinquantity').val('');
        //$('#txtoutquantity').val('');
        //$('#txtlhquantity').val('');
        //$('#txtrhquantity').val('');
        $('#txtlotno').val('');
        $('#txtquantity').val('');
        $('#ddlmodel').val('');
        $('#ddlmodel').trigger("chosen:updated");
        $('#ddlvariant').val('');
        $('#ddlvariant').trigger("chosen:updated");
        $('#txtremarks').val('');
        
    };
    $('#btnitemclear').click(reset);

    function Clear() {
        $.ajax({
            url: 'ClearPRNDetails',
            type: "POST",
            contentType: false, // Not to set any content header  
            processData: false, // Not to process data  
            success: function (result) {
                location.reload();

            },
            error: function (err) {
                //alert(err.statusText);
            }
        });
    };
    
   
    $('#btnclear').click(Clear);

});
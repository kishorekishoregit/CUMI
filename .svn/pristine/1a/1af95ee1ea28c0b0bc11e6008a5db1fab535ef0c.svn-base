jQuery(function ($) {
    var printload;
    var itemcodeimport="";
    var itemnameimport = "";
    var quantityimport = "";
    var netwtimport = "";
    var grosswtmport = "";
    var grndateimport = "";
    var lotnoimport = "";

    BindTable('1');

    function BindTable(type) {

        var table = document.getElementById("dynamic-table-print");
        var cols = [];
        var cols1 = [];
        var cols1DATA = [];
        var nullvalue;
        var colsresult;
        var finalcolsresult;

        var RoleDatatable = $('#dynamic-table-print');
        $(".loader").show("slow");
        $.ajax({
            url: 'GetRMLabelPrintPageLoad',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (Result) {

                var pageload = Result.split('|');

                var grnno = JSON.parse(pageload[0]);
                var resJ = JSON.parse(pageload[1]);


                $("#ddlgrnno").empty().append('<option value="">Select an Option</option>');
                $.each(grnno, function () {
                    $("#ddlgrnno").append($("<option></option>").val(this["GRNNO"]).html(this["GRNNO"]));
                    $('#ddlgrnno').trigger("chosen:updated");
                });



                BindTab(resJ, type);
            }
        });
        $(".loader").hide("slow");
    }

    function BindTab(ResData, type) {

        var currentDate = new Date()
        var day = currentDate.getDate()
        var month = currentDate.getMonth() + 1
        var year = currentDate.getFullYear()
        var currentdate = day + "/" + month + "/" + year;

        var cols = [];
        var cols1 = [];
        var cols1DATA = [];
        var nullvalue;
        var colsresult;
        var finalcolsresult;
        var elements = Array();
        var exampleRecord = ResData[0];
        // TABLE BIND     
        if (type == '0') {
            $('#dynamic-table-print').dataTable().fnDestroy();
            cols.length = 0;
            cols1.length = 0;
        }
        if (exampleRecord) {
            //get keys in object. This will only work if your statement remains true that all objects have identical keys
            var keys = Object.keys(exampleRecord);

            //for each key, add a column definition
            keys.forEach(function (k) {
                cols.push({
                    title: k,
                    data: k,
                    targets: k

                    //optionally do some type detection here for render function
                });
            });

            $.each(cols, function (index, item) {

                item.title, item.targets

                cols1.push({
                    title: item.title,
                    targets: index

                });

                cols1DATA.push({
                    data: item.title,
                });
                finalcolsresult += 'null' + ',';

            });

            var dyTable = $('#dynamic-table-print');

            $('#dynamic-table-print').dataTable({
                data: ResData,
                "bAutoWidth": false,
                "ascrollX": "100%",
                "aColumns": [
                    finalcolsresult,
                    { "bSortable": false }
                ],
                "aSorting": [],
                'columnDefs': [{
                    'targets': 0,
                    'searchable': true,
                    'orderable': true,
                    'className': 'dt-body-center',
                }],

                columnDefs: cols1,
                columns: [

                    { 'data': 'GRN No' },
                    { 'data': 'Item Code' },
                    { 'data': 'Item Name' },
                    { 'data': 'LOT No' },
                    { 'data': 'Lot Serial No' },
                    { 'data': 'NetWeight' },
                    {

                        'data': 'Reprint',
                        'render': function (data, type, full, meta) {

                            return '<button type="button" class="btn btn-danger btn-fab reprint" id="Edit" data-toggle="tooltip" data-placement="top" title="Edit"><i class="fa fa-print" aria-hidden="true"></i></button>'

                        }
                    }
                ],
                dom: 'Bfrtip',
                buttons: [

                    {
                        extend: 'excelHtml5',
                        title: 'RMLabel Print',
                        text: '<img src="../../Images/excel.png" style="height: 25px;">',
                        footer: false
                    },
                    {
                        extend: 'pdfHtml5',

                        text: '<img src="../../Images/pdf.png" style="height: 25px;">',
                        orientation: 'landscape',
                        pageSize: 'A4',
                        footer: false,
                        title: 'RMLabel Print'


                    }, {
                        extend: 'print',
                        title: 'RMLabel Print',
                        text: '<img src="../../Images/print.png" style="height: 25px;">',
                        footer: false
                    }
                ]

            });

            $("#dynamic-table-print").on("click", ".reprint", function () {
                var $row = $(this).closest("tr");    // Find the row
                var grnno = $(this).closest('tr').find('td:eq(0)').html();
                var lotno = $(this).closest('tr').find('td:eq(3)').html();
                var serialno = $(this).closest('tr').find('td:eq(4)').html();

                if (window.FormData !== undefined) {
                    $('.loadingGIF').show();
                    $(".loader").show("slow");
                    $.ajax({
                        url: 'RMReprint',
                        dataType: "json",
                        type: "POST",

                        //data: $("#validation-form").serialize() + '&' + $.param({ 'actiontype': $("#actiontype").text() }),

                        data: $.param({ 'grnno': grnno })
                            + '&' + $.param({ 'lotno': lotno })
                            + '&' + $.param({ 'serialno': serialno }),
                   
                        success: function (resultjson) {
                            var Res = resultjson.split('|');
                            var result = Res[0];
                            var printdata = Res[1];
                            var barcodes = Res[2];
                            if (result.toUpperCase() == "TRUE") {


                                //BindTab(Res, '1');
                                $("form").trigger("reset");


                                $("#printable").html(printdata);

                                var barcodearr = barcodes.split("^");
                                var COUNT = 0;
                                for (var i = 0; i < barcodearr.length; i++) {
                                    //var ID = DetailsTable[i].BARCODE;
                                    var ID = barcodearr[i];
                                    QRCODEPRINT(COUNT, ID);
                                    COUNT++;

                                }

                                setTimeout(function () {
                                    printableinner();
                                    Clear();


                                }, 20);

                      

                                $('.loadingGIF').hide();

                            }
                            else {
                                bootbox.alert({
                                    message: '<span class="text-danger"><i class="ace-icon fa fa-exclamation-triangle fa-4x"></i><br>' + msg + '</span>',
                                    size: 'small'
                                });
                                $('.loadingGIF').hide();
                            }
                        }
                    });
                }

            });
        }
        else {
            $('#dynamic-table tbody').remove();
            $('#dynamic-table thead').remove();
            $('#dynamic-table-print').dataTable({
                "language": {
                    "emptyTable": "RMLabelPrint No records found.."
                },
                'bSort': false,
                'aoColumns': [
                    { sWidth: "10%", bSearchable: false, bSortable: false },
                    { sWidth: "10", bSearchable: false, bSortable: false },
                    { sWidth: "10%", bSearchable: false, bSortable: false },
                    { sWidth: "10%", bSearchable: false, bSortable: false },
                    { sWidth: "10%", bSearchable: false, bSortable: false },
                    { sWidth: "10%", bSearchable: false, bSortable: false },
                    { sWidth: "10%", bSearchable: false, bSortable: false }


                ],
                "scrollCollapse": false,
                "info": true,
                "paging": true,
                "searching": true
            });


        }
        $(".loader").hide("slow");
    }

    $('#btnadd').click(function (event) {
        var errormessage = "";
        if ($('#ddlgrnno').val() == "") {
            errormessage += "Please Select GRN No.</br>";
        }


        if ($("#hdnsimport").val() == "FALSE") {
            if ($('#ddllotno').val() == "") {
                errormessage += "Please Select LOT No.</br>";
            }
            if ($('#txtquantity').val() <= 0 && $('#txtqty').val() != '') {
                errormessage += "Please Enter Quantity.</br>"
            }
        }
        else {
           
            $('#txtquantity').val("1");
            
        }
        
        if (errormessage.length == 0) {

            if ($('#txtquantity').val() == "1") {

                if ($("#hdnsimport").val() == "TRUE") {
                    var action = $('#actiontypeadd').html();

                    $(".loader").show("slow");

                    if (window.FormData !== undefined) {
                       
                        var formData = new FormData();
                        formData.append('GrnNo', $('#ddlgrnno').val());
                        formData.append('ItemCode', itemcodeimport);
                        formData.append('ItemName', itemnameimport);
                        formData.append('LotNo', lotnoimport);
                        formData.append('Quantity', $('#txtquantity').val());
                        formData.append('NetWeight', netwtimport);
                        formData.append('GrossWeight', grosswtmport);
                        formData.append('Grndate', grndateimport);

                        // var asstype = $('#ddlgrnno option:selected').text();

                        //  formData.append('GrnNo', asstype);

                        formData.append('action', action);
                        $.ajax({
                            url: 'AddInventoryMultiDetails',
                            type: "POST",
                            contentType: false, // Not to set any content header  
                            processData: false, // Not to process data  
                            data: formData,
                            success: function (result) {
                                var results = result.split('|');
                                printload = JSON.parse(results[1]);
                                if (results[0] == 'true') {

                                    BindChildTab(printload, '1');
                                    reset();
                                }
                                else {
                                    bootbox.alert({
                                        message: '<span class="text-danger"><i class="ace-icon fa fa-exclamation-triangle fa-4x"></i><br>' + results[1] + '</span>',
                                        size: 'small'
                                    });
                                }
                            },
                            error: function (err) {
                                //alert(err.statusText);
                            }
                        });
                        //$('#ddlgrnno').prop('disabled', true);



                    }
                }
                else {
                    var action = $('#actiontypeadd').html();

                    $(".loader").show("slow");

                    if (window.FormData !== undefined) {

                        var formData = new FormData();
                        formData.append('GrnNo', $('#ddlgrnno').val());
                        formData.append('ItemCode', $('#hdnitemcode').val());
                        formData.append('ItemName', $('#hdnitemname').val());
                        formData.append('LotNo', $('#ddllotno').val());
                        formData.append('Quantity', $('#hdnlotweight').val());
                        formData.append('NetWeight', $('#hdnnetweight').val());
                        formData.append('GrossWeight', $('#hdngrossweight').val());
                        formData.append('Grndate', $('#hdngrndate').val());
                        formData.append('SerialNo', $('#txtquantity').val());

                        // var asstype = $('#ddlgrnno option:selected').text();

                        //  formData.append('GrnNo', asstype);

                        formData.append('action', action);
                        $.ajax({
                            url: 'AddInventoryDetails',
                            type: "POST",
                            contentType: false, // Not to set any content header  
                            processData: false, // Not to process data  
                            data: formData,
                            success: function (result) {
                                var results = result.split('|');
                                printload = JSON.parse(results[1]);
                                if (results[0] == 'true') {

                                    BindChildTab(printload, '1');
                                    reset();
                                }
                                else {
                                    bootbox.alert({
                                        message: '<span class="text-danger"><i class="ace-icon fa fa-exclamation-triangle fa-4x"></i><br>' + results[1] + '</span>',
                                        size: 'small'
                                    });
                                }
                            },
                            error: function (err) {
                                //alert(err.statusText);
                            }
                        });
                        //$('#ddlgrnno').prop('disabled', true);



                    }
                }


            } else {
                var $row = $(this).closest("tr");
                var $lotno = $("#ddllotno").val();
                var $lotweight = $("#hdnlotweight").val();
                var $netweight = $("#hdnnetweight").val();
                var $grossweight = $("#hdngrossweight").val();
                var $quantity = $("#txtquantity").val();
                var $grndate = $("#hdngrndate").val()

                $('#modalview').modal('show');
                callpopup($lotno, $lotweight, $netweight, $grossweight, $quantity, $grndate);
            }



        }


        else {
            bootbox.alert({
                message: '<span class="text-danger"><i class="ace-icon fa fa-exclamation-triangle fa-4x"></i><br>' + errormessage + '</span>',
                size: 'small'
            });
        }
        //}
        //else {
        //    bootbox.alert({
        //        message: '<span class="text-danger"><i class="ace-icon fa fa-exclamation-triangle fa-4x"></i><br>' + errormessage + '</span>',
        //        size: 'small'
        //    });
        //}
    });



    function callpopup($lotno, $lotweight, $netweight, $grossweight, $quantity, $grndate) {

        $("#txtslotno").val($lotno);
        $("#txtslotweight").val($lotweight);
        $("#txtsnetweight").val($netweight);
        $('#txtsgrossweight').val($grossweight);
        $('#txtsquantity').val($quantity);
        $('#hdnpopgrndate').val($grndate);

    }

    $('#btnpopupadd').click(function (event) {
        var errormessage = "";
        if ($('#txtsactual').val() <= 0 && $('#txtsactual').val() != '') {
            errormessage += "Please Enter Actual Weight.</br>"
        }
        if (errormessage.length == 0) {

            var action = $('#actiontypepopupaddd').html();

            $(".loader").show("slow");

            if (window.FormData !== undefined) {
                var s = $('#txtsactualweight').val();
                var formData = new FormData();
                formData.append('GrnNo', $('#ddlgrnno').val());
                formData.append('ItemCode', $('#hdnitemcode').val());
                formData.append('ItemName', $('#hdnitemname').val());

                formData.append('LotNo', $('#txtslotno').val());
                formData.append('Quantity', $('#txtsquantity').val());
                formData.append('NetWeight', $('#txtsnetweight').val());
                formData.append('GrossWeight', $('#txtsgrossweight').val());
                formData.append('LotQuantity', $('#txtslotweight').val());
                formData.append('Grndate', $('#hdnpopgrndate').val());
                formData.append('actual', $('#txtsactualweight').val());
                formData.append('isauto', $("#IsAuto").is(':checked'));
                // var asstype = $('#ddlgrnno option:selected').text();

                //  formData.append('GrnNo', asstype);

                formData.append('action', action);
                $.ajax({
                    url: 'AddPopupInventoryDetails',
                    type: "POST",
                    contentType: false, // Not to set any content header  
                    processData: false, // Not to process data  
                    data: formData,
                    success: function (result) {
                        var results = result.split('|');
                        var printload2 = JSON.parse(results[1]);
                        if (results[0] == 'true') {

                            BindPopupChildTab(printload2, '1');
                            $('#txtsactualweight').val('');
                        }
                        else {
                            bootbox.alert({
                                message: '<span class="text-danger"><i class="ace-icon fa fa-exclamation-triangle fa-4x"></i><br>' + 'Divide Lot Quantity' + '</span>',
                                size: 'small'
                            });
                            BindPopupChildTab(printload2, '1');
                        }
                    },
                    error: function (err) {
                        //alert(err.statusText);
                    }
                });
                //$('#ddlgrnno').prop('disabled', true);



            }





        }


        else {
            bootbox.alert({
                message: '<span class="text-danger"><i class="ace-icon fa fa-exclamation-triangle fa-4x"></i><br>' + errormessage + '</span>',
                size: 'small'
            });
        }
        //}
        //else {
        //    bootbox.alert({
        //        message: '<span class="text-danger"><i class="ace-icon fa fa-exclamation-triangle fa-4x"></i><br>' + errormessage + '</span>',
        //        size: 'small'
        //    });
        //}
    });

    $('#btnpopupok').click(function (event) {

        if (window.FormData !== undefined) {
            var s = $('#txtsactualweight').val();
            var s1 = $('#txtslotweight').val();
            var formData = new FormData();
            formData.append('LotNo', $('#txtslotno').val());
            formData.append('NetWeight', $('#txtsnetweight').val());
            formData.append('LotQuantity', $('#txtslotweight').val());
            formData.append('Quantity', $('#txtsquantity').val());
            formData.append('actualweight', $('#txtsactualweight').val());
            formData.append('isauto', $("#IsAuto").is(':checked'));
            $(".loader").show("slow");


            $.ajax({
                url: 'OkInventoryDetails',
                type: "POST",
                contentType: false, // Not to set any content header  
                processData: false, // Not to process data 
                data: formData,
                success: function (result) {
                    var results = result.split('|');
                    var printload1 = JSON.parse(results[1]);
                    var printload4 = JSON.parse(results[2]);
                    if (results[0] == 'true') {
                        BindChildTab(printload1, '1');
                        BindPopupChildTab(printload4, '1')
                        let tableRef = document.getElementById('dynamic-table-details');
                        let newRow = tableRef.insertRow(-1);//inserts at last row

                        //$.each(printload, function (i, item) {
                        //    let Cell0 = newRow.insertCell(i);
                        //    let Cell1 = newRow.insertCell(i);
                        //    let Cell2 = newRow.insertCell(i);
                        //    let Cell3 = newRow.insertCell(i);
                        //    let Cell4 = newRow.insertCell(i);
                        //    let Cell5 = newRow.insertCell(i);
                        //    let Cell6 = newRow.insertCell(i);
                        //    let Cell7 = newRow.insertCell(i);

                        //    let Text0 = document.createTextNode(printload[i].GRNNO);
                        //    let Text1 = document.createTextNode(printload[i].ITEMCODE);
                        //    let Text2 = document.createTextNode(printload[i].ITEMNAME);
                        //    let Text3 = document.createTextNode(printload[i].LOTNO);
                        //    let Text4 = document.createTextNode(printload[i].SERIALNO);
                        //    let Text5 = document.createTextNode(printload[i].QUANTITY);
                        //    let Text6 = document.createTextNode(printload[i].NETWEIGHT);
                        //    let Text7 = document.createTextNode(printload[i].GROSSWEIGHT);

                        //    Cell0.appendChild(Text7);
                        //    Cell1.appendChild(Text6);
                        //    Cell2.appendChild(Text5);
                        //    Cell3.appendChild(Text4);
                        //    Cell4.appendChild(Text3);
                        //    Cell5.appendChild(Text2);
                        //    Cell6.appendChild(Text1);
                        //    Cell7.appendChild(Text0);

                        //});



                        $('#txtslotno').val('');
                        $('#txtsquantity').val('');
                        $('#txtslotweight').val('');
                        $('#txtsnetweight').val('');
                        $('#txtsgrossweight').val('');
                        $('#txtsactualweight').val('');
                        $('#hdnpopgrndate').val('');
                        $('#IsAuto').attr("checked", false);
                        $('#modalview').modal('hide');

                        reset();
                    }
                    else {
                        bootbox.alert({
                            message: '<span class="text-danger"><i class="ace-icon fa fa-exclamation-triangle fa-4x"></i><br>' + results[1] + '</span>',
                            size: 'small'
                        });
                        BindPopupChildTab(printload4, '1')
                    }
                },
                error: function (err) {
                    //alert(err.statusText);
                }
            });
            //$('#ddlgrnno').prop('disabled', true);



        }


    });




    //Load the Details Image Table
    function BindChildTab(ResData, type) {

        var cols = [];
        var cols1 = [];
        var cols1DATA = [];
        var nullvalue;
        var colsresult;
        var finalcolsresult;
        var elements = Array();
        var exampleRecord = ResData[0];
        var rcount = $("#dynamic-table-details > tbody > tr").length
        // TABLE BIND     
        if (rcount > 0) {



            $('#dynamic-table-details').dataTable().fnDestroy();

            //  $('#dynamic-table-details').dataTable().Rows.InsertAt(myDataRow, 0);
            cols.length = 0;
            cols1.length = 0;
        }
        if (exampleRecord) {
            //get keys in object. This will only work if your statement remains true that all objects have identical keys
            var keys = Object.keys(exampleRecord);

            //for each key, add a column definition
            keys.forEach(function (k) {
                cols.push({


                    title: k,
                    data: k,
                    targets: k

                    //optionally do some type detection here for render function
                });
            });

            $.each(cols, function (index, item) {

                item.title, item.targets

                cols1.push({

                    title: item.title,
                    targets: index

                });

                cols1DATA.push({
                    data: item.title,

                });
                finalcolsresult += 'null' + ',';

            });

            $('#dynamic-table-details').dataTable({
                data: ResData,
                "bAutoWidth": false,
                "ascrollX": "100%",
                "bPaginate": false,
                "bSort": false,
                "bInfo": false,
                "bFilter": false,
                "aColumns": [
                    finalcolsresult,
                    { "bSortable": false }
                ],
                "aSorting": [],
                'columnDefs': [{
                    'targets': 0,
                    'searchable': false,
                    'orderable': false,
                    'className': 'dt-body-center'
                }],

                columnDefs: cols1,

                columns: [

                    { 'data': 'GRNNO' },
                    { 'data': 'ITEMCODE' },
                    { 'data': 'ITEMNAME' },
                    { 'data': 'LOTNO' },
                    { 'data': 'SERIALNO' },
                    { 'data': 'QUANTITY' },
                    { 'data': 'NETWEIGHT' },
                    { 'data': 'GROSSWEIGHT' },
                    { 'data': 'GRNDATE' },

                ],

            });

        }
        else {
            $('#dynamic-table-details tbody').remove();
            $('#dynamic-table-details thead').remove();
            $('#dynamic-table-details').dataTable({
                "language": {
                    "emptyTable": "GRN Details No Records Found.."
                },
                'bSort': false,
                'aoColumns': [
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false }


                ],
                "scrollCollapse": false,
                "info": false,
                "paging": false,
                "searching": true
            });

        }


    }

    function BindPopupChildTab(ResData, type) {

        var cols = [];
        var cols1 = [];
        var cols1DATA = [];
        var nullvalue;
        var colsresult;
        var finalcolsresult;
        var elements = Array();
        var exampleRecord = ResData[0];
        var rcount = $("#dynamic-popuptableDetails > tbody > tr").length
        // TABLE BIND     
        if (rcount > 0) {
            $('#dynamic-popuptableDetails').dataTable().fnDestroy();
            cols.length = 0;
            cols1.length = 0;
        }
        if (exampleRecord) {
            //get keys in object. This will only work if your statement remains true that all objects have identical keys
            var keys = Object.keys(exampleRecord);

            //for each key, add a column definition
            keys.forEach(function (k) {
                cols.push({


                    title: k,
                    data: k,
                    targets: k

                    //optionally do some type detection here for render function
                });
            });

            $.each(cols, function (index, item) {

                item.title, item.targets

                cols1.push({

                    title: item.title,
                    targets: index

                });

                cols1DATA.push({
                    data: item.title,

                });
                finalcolsresult += 'null' + ',';

            });

            $('#dynamic-popuptableDetails').dataTable({
                data: ResData,
                "bAutoWidth": false,
                "ascrollX": "100%",
                "bPaginate": false,
                "bSort": false,
                "bInfo": false,
                "bFilter": false,
                "aColumns": [
                    finalcolsresult,
                    { "bSortable": false }
                ],
                "aSorting": [],
                'columnDefs': [{
                    'targets': 0,
                    'searchable': false,
                    'orderable': false,
                    'className': 'dt-body-center'
                }],

                columnDefs: cols1,
                //columnDefs: [{
                //    "defaultContent": "-",
                //    "targets": "_all"
                //}],
                columns: [

                    { 'data': 'GRNNO' },
                    { 'data': 'ITEMCODE' },
                    { 'data': 'ITEMNAME' },
                    { 'data': 'LOTNO' },
                    { 'data': 'SERIALNO' },
                    { 'data': 'QUANTITY' },
                    { 'data': 'NETWEIGHT' },
                    { 'data': 'GROSSWEIGHT' },
                    { 'data': 'GRNDATE' },
                    { 'data': 'ACTUAL' },
                    {

                        'data': 'REMOVE',
                        'render': function (data, type, full, meta) {



                            return '<button type="button" class="remove" data-toggle="tooltip" data-placement="top" title="Remove"><i class="fa fa-remove"></i></button>'

                        }
                    },
                ],

            });

        }
        else {
            $('#dynamic-popuptableDetails tbody').remove();
            $('#dynamic-popuptableDetails thead').remove();
            $('#dynamic-popuptableDetails').dataTable({
                "language": {
                    "emptyTable": "GRN Details No Records Found.."
                },
                'bSort': false,
                'aoColumns': [
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false },
                    { sWidth: "100%", bSearchable: false, bSortable: false }


                ],
                "scrollCollapse": false,
                "info": false,
                "paging": false,
                "searching": true
            });

        }


    }
    $("#dynamic-popuptableDetails").on("click", ".remove", function () {
        var SERIALNO = $(this).closest('tr').find('td:eq(4)').html();
        var ACTUAL = $(this).closest('tr').find('td:eq(9)').html();
        //var insNo = $('#inspectionno').val();
        $.ajax({
            url: 'DeleteInspectionRow',
            dataType: "json",
            type: "POST",
            data: $.param({ 'SERIALNO': SERIALNO }) + '&' + $.param({ 'ACTUAL': ACTUAL }),// + '&' + $.param({ 'insNo': insNo }),

            success: function (result) {
                BindPopupChildTab(JSON.parse(result), '1');

            }
        });

    });

    $('#ddlgrnno').change(function () {

        var optionselected = $(this);
        var OValue = optionselected.val();
        //var OText = optionselected.find("option:selected").text();
        $(".loader").show("slow");
        $.ajax({

            url: 'FetchRMLabelPrintGetLotNoByGRNNo',
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            data: { 'GrnNo': OValue },

            success: function (data) {

                var Res = data.split('|');
                var lotno = JSON.parse(Res[0]);
                var grnno = JSON.parse(Res[1]);
                var hiddet = JSON.parse(Res[2]);
                $("#ddllotno").empty();
                $('#ddllotno').trigger("chosen:updated");
                $("#hdnsimport").val(grnno[0].IMPORT);
                if ($("#hdnsimport").val() == "TRUE") {
                    
                    $("#ddllotno").empty();
                    $('#ddllotno').trigger("chosen:updated");
                    $("#txtquantity").prop('readonly', true);

                    $.each(hiddet, function (i, item) {

                        itemcodeimport += hiddet[i].ITEMCODE + "^";
                        itemnameimport += hiddet[i].ITEMNAME + "^";
                        quantityimport += hiddet[i].QUANTITY + "^";
                        netwtimport += hiddet[i].NETWEIGHT + "^";
                        grosswtmport += hiddet[i].GROSSWEIGHT + "^";
                        grndateimport += hiddet[i].GRNDATE + "^";
                        lotnoimport += hiddet[i].LOTNO + "^";

                    });
                }
                else {
                  //  $("#ddllotno").prop('readonly', false);
                    
                    $("#ddllotno").empty().append('<option value="">Select an Option</option>');
                    $.each(lotno, function () {
                        $("#ddllotno").append($("<option></option>").val(this["LOTNO"]).html(this["LOTNO"]));
                        $('#ddllotno').trigger("chosen:updated");
                    });
                    $("#txtquantity").prop('readonly', false);
                }
                
              //  alert(grnno[0].IMPORT);
               
                

              



            }
        });
        $(".loader").hide("slow");
    });

    $('#ddllotno').change(function () {

        var optionselected = $(this);
        var OValue = optionselected.val();
        //var OText = optionselected.find("option:selected").text();
        $(".loader").show("slow");
        $.ajax({

            url: 'FetchRMLabelPrintGetHiddenValuebyLotNO',
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            data: { 'GrnNo': OValue },
            data: $.param({ 'GrnNo': $("#ddlgrnno").val() })
                + '&' + $.param({ 'LotNo': $("#ddllotno").val() }),

            success: function (data) {

                var Res = JSON.parse(data);


                $("#hdnitemcode").val(Res[0].ITEMCODE);
                $("#hdnitemname").val(Res[0].ITEMNAME);
                $('#hdnlotweight').val(Res[0].QUANTITY);
                $('#hdnnetweight').val(Res[0].NETWEIGHT);
                $('#hdngrossweight').val(Res[0].GROSSWEIGHT);
                $('#hdngrndate').val(Res[0].GRNDATE);

            }
        });
        $(".loader").hide("slow");
    });


    function reset() {

        $('#ddlgrnno').val("");
        $('#ddlgrnno').prop('disabled', false);
        $('#ddlgrnno').trigger("chosen:updated");
        $('#hdnitemcode').val("");
        $('#hdnitemname').val("");
        $('#ddllotno').val("");
        $('#ddllotno').trigger("chosen:updated");
        $('#txtquantity').val("");
        $('#hdnnetweight').val("");
        $('#hdnlotweight').val("");
        $('#hdngrossweight').val("");

        $('#hdngrndate').val("");
    }

    $('#IsAuto').click(function () {
        if ($(this).is(':checked')) {
            $('#IsAuto').attr("checked", true);
            itemclear();

        } else {
            $('#IsAuto').attr("checked", false);
            itemclear();
        }
    });

    function itemclear() {
        $('#txtsactualweight').val("");
        
        ClearPop();
    }
 

    $("#btnprint").click(function () {

        var grnno = "", itemcode = "", itemname = "", lotno = "", serialno = "", quantity = "", netweight = "", grossweight = "", grndate = "";
        var intcount = 0;
        jQuery("table.detailstable tbody > tr").each(function () {

            intcount++;
            grnno += jQuery('td:eq(0)', this).text() + "^";
            itemcode += jQuery('td:eq(1)', this).text() + "^";
            itemname += jQuery('td:eq(2)', this).text() + "^";
            lotno += jQuery('td:eq(3)', this).text() + "^";
            serialno += jQuery('td:eq(4)', this).text() + "^";
            quantity += jQuery('td:eq(5)', this).text() + "^";
            netweight += jQuery('td:eq(6)', this).text() + "^";
            grossweight += jQuery('td:eq(7)', this).text() + "^";
            grndate += jQuery('td:eq(8)', this).text() + "^";
            //grndate += $('#hdngrndate').val() + "^";

        });
        if (intcount > 0) {
            grnno = grnno.substring(0, grnno.length - 1);
            itemcode = itemcode.substring(0, itemcode.length - 1);
            itemname = itemname.substring(0, itemname.length - 1);
            lotno = lotno.substring(0, lotno.length - 1);
            serialno = serialno.substring(0, serialno.length - 1);
            quantity = quantity.substring(0, quantity.length - 1);
            netweight = netweight.substring(0, netweight.length - 1);
            grossweight = grossweight.substring(0, grossweight.length - 1);
            grndate = grndate.substring(0, grndate.length - 1);

        }

        var errormessage = "";
        if (window.FormData !== undefined) {
            $('.loadingGIF').show();
            $(".loader").show("slow");
            $.ajax({
                url: 'InsertRMLabelPrintDetails',
                dataType: "json",
                type: "POST",

                //data: $("#validation-form").serialize() + '&' + $.param({ 'actiontype': $("#actiontype").text() }),

                data: $.param({ 'grnno': grnno })
                    + '&' + $.param({ 'itemcode': itemcode })
                    + '&' + $.param({ 'itemname': itemname })
                    + '&' + $.param({ 'lotno': lotno })
                    + '&' + $.param({ 'serialno': serialno })
                    + '&' + $.param({ 'quantity': quantity })
                    + '&' + $.param({ 'netweight': netweight })
                    + '&' + $.param({ 'grossweight': grossweight })
                    + '&' + $.param({ 'grndate': grndate }),
                //  data:formData,
                success: function (resultjson) {
                    var Res = resultjson.split('|');
                    var result = Res[0];
                    var printdata = Res[1];
                    var barcodes = Res[2];
                    if (result.toUpperCase() == "TRUE") {


                        //BindTab(Res, '1');
                        $("form").trigger("reset");


                        $("#printable").html(printdata);

                        var barcodearr = barcodes.split("^");
                        var COUNT = 0;
                        for (var i = 0; i < barcodearr.length; i++) {
                            //var ID = DetailsTable[i].BARCODE;
                            var ID = barcodearr[i];
                            QRCODEPRINT(COUNT, ID);
                            COUNT++;

                        }

                        setTimeout(function () {
                            printableinner();
                            Clear();


                        }, 20);

                        //bootbox.alert({
                        //    message: '<span class="text-success"><i class="ace-icon fa fa-check-circle fa-4x"></i><br>' + "RMLabel Print Saved Successfully" + '</span>',
                        //    size: 'small',
                        //    callback: function () {
                        //        location.reload();
                        //    }
                        //});

                        $('.loadingGIF').hide();

                    }
                    else {
                        bootbox.alert({
                            message: '<span class="text-danger"><i class="ace-icon fa fa-exclamation-triangle fa-4x"></i><br>' + msg + '</span>',
                            size: 'small'
                        });
                        $('.loadingGIF').hide();
                    }
                }
            });
        }



    });

    function Clear() {
        $.ajax({
            url: 'ClearRMLabelprint',
            type: "POST",
            contentType: false, // Not to set any content header  
            processData: false, // Not to process data  
            success: function (result) {
                BindTable('0');
                $('#dynamic-table-details').dataTable().fnDestroy();
                $('#dynamic-table-details').empty();

            },
            error: function (err) {
                //alert(err.statusText);
            }
        });
    };

    function ClearPop() {
        $.ajax({
            url: 'ClearRMPopLabelprint',
            type: "POST",
            contentType: false, // Not to set any content header  
            processData: false, // Not to process data  
            success: function (result) {
                var pageload = result;

                var grnno = JSON.parse(pageload);

                BindPopupChildTab(grnno, '1');

            },
            error: function (err) {
                //alert(err.statusText);
            }
        });
    };

    function QRCODEPRINT(COUNT, ID) {
        $("#qrcode").empty();

        var qrcode = new QRCode(document.getElementById("qrcode" + COUNT), {
            width: 120,
            height: 120
        });
        function makeCode() {
            var elText = ID;
            qrcode.makeCode(elText);
        }
        makeCode();
    }



    function printableinner() {

        var disp_setting = "toolbar=no,location=no,";
        disp_setting += "directories=no,menubar=no,";
        disp_setting += "scrollbars=yes";
        var content_vlue = document.getElementById("printable").innerHTML;
        var docprint = window.open("", "", disp_setting);
        docprint.document.open();
        docprint.document.write('<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"');
        docprint.document.write('"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">');
        docprint.document.write('<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">');
        docprint.document.write('<head>');
        docprint.document.write('<style type="text/css">body{ border:0px solid #000;margin:0px;font-family:verdana,Arial;color:#000;font-family:Verdana, Geneva, sans-serif; font-size:8px;}a{color:#000;text-decoration:none;}*{font-size:8px;} small{font-size:30% !important;}table {border-collapse: collapse;}table, tr, td, th {border: 0px solid black;padding:0.5rem 2px;}@page {size: 4in 2in;margin: 1mm;}div#printable {width: 4in;height: 2in;} .qr-panel img{width:50px;}</style> ');
        docprint.document.write('</head><body onLoad="self.print()">');
        docprint.document.write(content_vlue);
        docprint.document.close();
        docprint.focus();

    }



    function Clear() {
        location.reload();
    };

    $('#btnclear').click(Clear);

    $('#btnpopupitemclear').click(ClearPop);

    function Gridreset() {
        $('#IsAuto').attr("checked", false);
    }


    $('#btnview').click(function (event) {
        var $text = $('#ddlgrnno').val();
        $('#modalview1').modal('show');
        callpopup1($text);
    });
    function callpopup1($text) {
        $(".loader").show("slow");
        $.ajax({
            url: 'GRNViewDts',
            dataType: 'json',
            type: 'POST',
            data: { "GRNNO": $text },

            success: function (data) {
                //debugger;
                var Tables = data.split('|');
                var GRNItemDetails = JSON.parse(Tables[0]);
                //debugger;
                BindPopupTab(GRNItemDetails, '1');
                $("html, body").animate({ scrollTop: 0 }, "slow");

            }
        });
        $(".loader").hide("slow");
    }
    function BindPopupTab(ResData, type) {

        var cols = [];
        var cols1 = [];
        var cols1DATA = [];
        var nullvalue;
        var colsresult;
        var finalcolsresult;
        var elements = Array();
        var exampleRecordUpload = ResData[0];
        // TABLE BIND
        var len = $('#dynamic-tableDetails tbody').children().length;
        if (type == '0' || len != '0') {
            $('#dynamic-tableDetails').dataTable().fnDestroy();
            cols.length = 0;
            cols1.length = 0;
        }
        if (exampleRecordUpload) {
            //get keys in object. This will only work if your statement remains true that all objects have identical keys
            var keys = Object.keys(exampleRecordUpload);

            //for each key, add a column definition
            keys.forEach(function (k) {

                cols.push({
                    title: k,
                    data: k,
                    targets: k

                    //optionally do some type detection here for render function
                });
            });

            $.each(cols, function (index, item) {

                item.title, item.targets

                cols1.push({
                    title: item.title,
                    targets: index

                });

                cols1DATA.push({
                    data: item.title,
                });
                finalcolsresult += 'null' + ',';

            });

            //  var dyTable1 = $('#dynamic-tableUpload');

            $('#dynamic-tableDetails').dataTable({
                data: ResData,
                "bAutoWidth": false,
                "bSort": false,
                "ascrollX": "100%",
                "aColumns": [
                    finalcolsresult,
                    { "bSortable": false }
                ],
                "aSorting": [],
                'columnDefs': [{
                    'targets': 0,
                    'searchable': false,
                    'orderable': false,
                    'className': 'dt-body-center'
                }],

                columnDefs: cols1,
                columns: cols1DATA

            });
        }
        else {
            $('#dynamic-tableDetails tbody').remove();
            $('#dynamic-tableDetails thead').remove();
            $('#dynamic-tableDetails').dataTable({
                "language": {
                    "emptyTable": "No records found.."
                },
                'bSort': false,
                'aoColumns': [
                    { sWidth: "10%", bSearchable: false, bSortable: false },
                    { sWidth: "10", bSearchable: false, bSortable: false },
                    { sWidth: "10%", bSearchable: false, bSortable: false },
                    { sWidth: "10%", bSearchable: false, bSortable: false },
                    { sWidth: "10%", bSearchable: false, bSortable: false },
                    { sWidth: "10%", bSearchable: false, bSortable: false },
                    { sWidth: "10%", bSearchable: false, bSortable: false }
                ],
                "scrollCollapse": false,
                "info": false,
                "paging": false,
                "searching": false
            });


        }

    }
});
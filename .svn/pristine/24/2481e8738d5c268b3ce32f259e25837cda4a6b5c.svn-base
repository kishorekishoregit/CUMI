<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SSB0000" xml:space="preserve">
    <value>"{A}"</value>
  </data>
  <data name="SSB0001" xml:space="preserve">
    <value>User "{A}" Locked.</value>
  </data>
  <data name="SSB0002" xml:space="preserve">
    <value>Username and Password Incorrect.</value>
  </data>
  <data name="SSB0003" xml:space="preserve">
    <value>The "{A}" can contain only alphabets.</value>
  </data>
  <data name="SSB0004" xml:space="preserve">
    <value>The "{A}" can contain only text, no special characters are allowed</value>
  </data>
  <data name="SSB0005" xml:space="preserve">
    <value>The "{A}" can contain only numbers, no special characters and alphabets are allowed.</value>
  </data>
  <data name="SSB0006" xml:space="preserve">
    <value>The "{A}" can contain only date and time.</value>
  </data>
  <data name="SSB0007" xml:space="preserve">
    <value>The "{A}" already exist.</value>
  </data>
  <data name="SSB0008" xml:space="preserve">
    <value>This Specific Record has been updated by someone, Please ensure and update again.</value>
  </data>
  <data name="SSB0009" xml:space="preserve">
    <value>"{A}" Cannot be Left Empty.</value>
  </data>
  <data name="SSB0010" xml:space="preserve">
    <value>Please Select "{A}".</value>
  </data>
  <data name="SSB0011" xml:space="preserve">
    <value>Employee Code "{A}" has been saved successfully.</value>
  </data>
  <data name="SSB0012" xml:space="preserve">
    <value>Employee Code "{A}" Insertion Failed.</value>
  </data>
  <data name="SSB0013" xml:space="preserve">
    <value>Employee Code "{A}" updated successfully.</value>
  </data>
  <data name="SSB0014" xml:space="preserve">
    <value>Employee Code "{A}" updation failed.</value>
  </data>
  <data name="SSB0015" xml:space="preserve">
    <value>Employee Code "{A}" already exists.</value>
  </data>
  <data name="SSB0016" xml:space="preserve">
    <value>User "{A}" Mapped successfully.</value>
  </data>
  <data name="SSB0017" xml:space="preserve">
    <value>User "{A}" Mapped Failed.</value>
  </data>
  <data name="SSB0018" xml:space="preserve">
    <value>User "{A}" updated successfully.</value>
  </data>
  <data name="SSB0019" xml:space="preserve">
    <value>"{A}" User updation failed.</value>
  </data>
  <data name="SSB0020" xml:space="preserve">
    <value>"{A}" User already exists.</value>
  </data>
  <data name="SSB0201" xml:space="preserve">
    <value>Location Code "{A}" has been saved successfully.</value>
  </data>
  <data name="SSB0202" xml:space="preserve">
    <value>Location Code "{A}" Insertion Failed.</value>
  </data>
  <data name="SSB0203" xml:space="preserve">
    <value>Location Code "{A}" updated successfully.</value>
  </data>
  <data name="SSB0204" xml:space="preserve">
    <value>Location Code "{A}" updation failed.</value>
  </data>
  <data name="SSB0205" xml:space="preserve">
    <value>Location Code "{A}" already exists.</value>
  </data>
  <data name="SSB0206" xml:space="preserve">
    <value>RackCode "{A}" has been saved successfully.</value>
  </data>
  <data name="SSB0207" xml:space="preserve">
    <value>Rack Code "{A}" Insertion Failed.</value>
  </data>
  <data name="SSB0208" xml:space="preserve">
    <value>Rack Code "{A}" updated successfully.</value>
  </data>
  <data name="SSB0209" xml:space="preserve">
    <value>Rack Code "{A}" updation failed.</value>
  </data>
  <data name="SSB0210" xml:space="preserve">
    <value>Rack Code "{A}" already exists.</value>
  </data>
  <data name="SSB0211" xml:space="preserve">
    <value>Bin Code"{A}" has been saved successfully.</value>
  </data>
  <data name="SSB0212" xml:space="preserve">
    <value>Bin Code "{A}" Insertion Failed.</value>
  </data>
  <data name="SSB0213" xml:space="preserve">
    <value>Bin Code "{A}" updated successfully.</value>
  </data>
  <data name="SSB0214" xml:space="preserve">
    <value>Bin Code "{A}" updation failed.</value>
  </data>
  <data name="SSB0215" xml:space="preserve">
    <value>Bin Code "{A}" already exists.</value>
  </data>
  <data name="SSB0021" xml:space="preserve">
    <value>Customer Code "{A}" has been saved successfully.</value>
  </data>
  <data name="SSB0022" xml:space="preserve">
    <value>Customer Code "{A}" already exists.</value>
  </data>
  <data name="SSB0023" xml:space="preserve">
    <value>Customer Code "{A}" updated successfully.</value>
  </data>
  <data name="SSB0024" xml:space="preserve">
    <value>Customer Code "{A}" updation failed.</value>
  </data>
  <data name="SSB0025" xml:space="preserve">
    <value>Supplier Code "{A}" has been saved successfully.</value>
  </data>
  <data name="SSB0026" xml:space="preserve">
    <value>Supplier Code "{A}" already exists.</value>
  </data>
  <data name="SSB0027" xml:space="preserve">
    <value>Supplier Code "{A}" updated successfully.</value>
  </data>
  <data name="SSB0028" xml:space="preserve">
    <value>Supplier Code "{A}" updation failed.</value>
  </data>
  <data name="SSB0101" xml:space="preserve">
    <value>Item Code "{A}" has been saved successfully.</value>
  </data>
  <data name="SSB0102" xml:space="preserve">
    <value>Item Code "{A}" Insertion Failed.</value>
  </data>
  <data name="SSB0103" xml:space="preserve">
    <value>Item Code "{A}" updated successfully.</value>
  </data>
  <data name="SSB0104" xml:space="preserve">
    <value>Item Code "{A}" updation failed.</value>
  </data>
  <data name="SSB0105" xml:space="preserve">
    <value>Item Code "{A}" already exists.</value>
  </data>
  <data name="SSB0106" xml:space="preserve">
    <value>PRN No "{A}" has been saved successfully.</value>
  </data>
  <data name="SSB0107" xml:space="preserve">
    <value>PRN No "{A}" Insertion Failed.</value>
  </data>
  <data name="SSB0108" xml:space="preserve">
    <value>PRN No "{A}" updated successfully.</value>
  </data>
  <data name="SSB0109" xml:space="preserve">
    <value>PRN No "{A}" updation failed.</value>
  </data>
  <data name="SSB0111" xml:space="preserve">
    <value>Lot No "{A}" has been Saved.</value>
  </data>
  <data name="SSB0112" xml:space="preserve">
    <value>Lot No "{A}" has been Rejected.</value>
  </data>
  <data name="SSB0113" xml:space="preserve">
    <value>Lot No "{A}" already exists.</value>
  </data>
  <data name="SSB0401" xml:space="preserve">
    <value>Job Process "{A}" has been saved successfully.</value>
  </data>
  <data name="SSB0402" xml:space="preserve">
    <value>Job Process "{A}" Insertion Failed.</value>
  </data>
  <data name="SSB0403" xml:space="preserve">
    <value>Job Process "{A}" updated successfully.</value>
  </data>
  <data name="SSB0404" xml:space="preserve">
    <value>Job Process "{A}" updation failed.</value>
  </data>
  <data name="SSB0405" xml:space="preserve">
    <value>Job Process "{A}" already exists.</value>
  </data>
  <data name="SSB0600" xml:space="preserve">
    <value>Forming Plan "{A}" has been saved successfully.</value>
  </data>
  <data name="SSB0601" xml:space="preserve">
    <value>Forming Plan "{A}" Insertion Failed.</value>
  </data>
  <data name="SSB0602" xml:space="preserve">
    <value>Forming Plan  "{A}" updated successfully.</value>
  </data>
  <data name="SSB0603" xml:space="preserve">
    <value>Forming Plan  "{A}" updation failed.</value>
  </data>
  <data name="SSB0301" xml:space="preserve">
    <value>SRN "{A}" has been created successfully.</value>
  </data>
  <data name="SSB0302" xml:space="preserve">
    <value>SRN "{A}" already exists.</value>
  </data>
  <data name="SSB0303" xml:space="preserve">
    <value>SRN "{A}" Updated successfully.</value>
  </data>
  <data name="SSB0304" xml:space="preserve">
    <value>SRN "{A}" Updation failed.</value>
  </data>
  <data name="SSB0029" xml:space="preserve">
    <value>GRN "{A}" has been created successfully.</value>
  </data>
  <data name="SSB0030" xml:space="preserve">
    <value>GRN "{A}" already exists.</value>
  </data>
  <data name="SSB0031" xml:space="preserve">
    <value>GRN "{A}" Updated successfully.</value>
  </data>
  <data name="SSB0032" xml:space="preserve">
    <value>GRN "{A}" Updation failed.</value>
  </data>
  <data name="SSB0604" xml:space="preserve">
    <value>Dispatch Plan "{A}" has been saved successfully.</value>
  </data>
  <data name="SSB0605" xml:space="preserve">
    <value>Dispatch Plan "{A}" Insertion Failed.</value>
  </data>
  <data name="SSB0606" xml:space="preserve">
    <value>Dispatch Plan "{A}" updated successfully.</value>
  </data>
  <data name="SSB0607" xml:space="preserve">
    <value>Dispatch Plan  "{A}" updation failed.</value>
  </data>
  <data name="SSB0608" xml:space="preserve">
    <value>Process Master "{A}" has been saved successfully.</value>
  </data>
  <data name="SSB0609" xml:space="preserve">
    <value>Process Master "{A}" already exists.</value>
  </data>
  <data name="SSB0610" xml:space="preserve">
    <value>Process Master  "{A}" updated successfully.</value>
  </data>
  <data name="SSB0611" xml:space="preserve">
    <value>Process Master  "{A}" updation failed..</value>
  </data>
  <data name="SSB070" xml:space="preserve">
    <value>Invoice "{A}" Already Exists.</value>
  </data>
  <data name="SSB0701" xml:space="preserve">
    <value>Invoice "{A}" has been created successfully.</value>
  </data>
  <data name="SSB0702" xml:space="preserve">
    <value>Invoice "{A}" has been Insertion Failed.</value>
  </data>
  <data name="SSB0703" xml:space="preserve">
    <value>Invoice "{A}" has been Updated Successfully.</value>
  </data>
  <data name="SSB0704" xml:space="preserve">
    <value>Invoice "{A}" has been Updated Failed.</value>
  </data>
</root>
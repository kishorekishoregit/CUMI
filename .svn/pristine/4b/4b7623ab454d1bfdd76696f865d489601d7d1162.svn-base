jQuery(function ($) {
    $('[data-rel=tooltip]').tooltip();

    //------------------------------------------------------------------------------------------------------Validate Mantatory 
    jQuery.validator.addMethod("phone", function (value, element) {
        return this.optional(element) || /^\(\d{3}\) \d{3}\-\d{4}( x\d{1,6})?$/.test(value);
    }, "Enter a valid phone number.");

    $('#validation-form').validate({
        errorElement: 'div',
        errorClass: 'help-block',
        focusInvalid: true,
        ignore: "",
        rules: {

            department: {
                username: true
            },

        },

        messages: {

            username: "Please select UserName",
        },


        highlight: function (e) {
            $(e).closest('.form-group').removeClass('has-info').addClass('has-error');
        },

        success: function (e) {
            $(e).closest('.form-group').removeClass('has-error');//.addClass('has-info');
            $(e).remove();
        },

        errorPlacement: function (error, element) {
            if (element.is('input[type=checkbox]') || element.is('input[type=radio]')) {
                var controls = element.closest('div[class*="col-"]');
                if (controls.find(':checkbox,:radio').length > 1) controls.append(error);
                else error.insertAfter(element.nextAll('.lbl:eq(0)').eq(0));
            }
            else if (element.is('.select2')) {
                error.insertAfter(element.siblings('[class*="select2-container"]:eq(0)'));
            }
            else if (element.is('.chosen-select')) {
                error.insertAfter(element.siblings('[class*="chosen-container"]:eq(0)'));
            }
            else error.insertAfter(element.parent());
        },

        submitHandler: function (form) {
        },
        invalidHandler: function (form) {
        }

    });

    $('#modal-wizard-container').ace_wizard();
    $('#modal-wizard .wizard-actions .btn[data-dismiss=modal]').removeAttr('disabled');

    $(document).one('ajaxloadstart.page', function (e) {
        //in ajax mode, remove remaining elements before leaving page
        $('[class*=select2]').remove();
    });


    //Grid Bind Value
    BindTable();

    //------------------------------------------------------------------------------------------------------- Department Selected Index change

    //------------------------------------------------------------------------------------------------------- User Name Selected Index change
    $('#username').change(function () {
        $("#txtSelectAllScreens").prop('checked', false);
        var optionselected = $(this);
        var OValue = optionselected.val();
        //var OText = optionselected.find("option:selected").text();

        $(".loader").show("slow");
        $.ajax({

            url: 'FetchScreenDetailsByUserName',
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            data: { 'username': OValue },
            success: function (Result) {

                var pageload = Result.split('|');

                var resJ = JSON.parse(pageload[0]);

                var exampleRecord = resJ[0];

                BindTab(resJ, '0');
            }

        });
        $(".loader").hide("slow");
    });

    //-------------------------------------------------------------------------------------------------------Employee Code Selected Index change


    $('#btnsubmit').click(function () {
        $('.loadingGIF').show();
        if ($('#username').val() != "") {
            if (window.FormData !== undefined) {

                var formData = new FormData();
                //Split Employee Code Only
                formData.append('username', $('#username').val());
                formData.append('actiontype', $('#actiontype').text());
                debugger
                var count = 0;

                var sno = "", view = "", edit = "", screenid = "", screenname = "", functionname = "";
                jQuery("table.checkupload tbody > tr").each(function () {
                    debugger
                    // sno += jQuery('td:eq(0)', this).text() + "^";
                    if (jQuery('td:eq(3)', this).children('input.checkbox').is(':checked') || jQuery('td:eq(4)', this).children('input.checkbox').is(':checked')) {
                        screenid += jQuery('td:eq(0)', this).text() + "^";
                        screenname += jQuery('td:eq(1)', this).text() + "^";
                        functionname += jQuery('td:eq(2)', this).text() + "^";
                        view += jQuery('td:eq(3)', this).children('input.checkbox').is(':checked') + "^";
                        edit += jQuery('td:eq(4)', this).children('input.checkbox').is(':checked') + "^";
                    }
                    debugger
                });
                debugger
                // formData.append('sno', sno = sno.substring(0, sno.length - 1));

                formData.append('screenid', screenid = screenid.substring(0, screenid.length - 1));
                formData.append('screenname', screenname = screenname.substring(0, screenname.length - 1));
                formData.append('view', view = view.substring(0, view.length - 1));
                formData.append('edit', edit = edit.substring(0, edit.length - 1));
             


                //if (!$('#validation-form').valid()) e.preventDefault();
                //else {
                if (view != "" || edit != "" ) {
                    $(".loader").show("slow");
                    $.ajax({
                        url: 'InsertUserAuthenticationMaster',
                        dataType: "json",
                        type: "POST",
                        contentType: false, // Not to set any content header  
                        processData: false, // Not to process data  
                        //data: $("#validation-form").serialize() + '&' + $.param({ 'actiontype': $("#actiontype").text() }) + + '&' + formData,
                        data: formData,
                        success: function (data) {

                            var Res = data.split('|');
                            var result = Res[0];
                            var msg = Res[1];

                            if (result.toUpperCase() == "TRUE") {
                                $("form").trigger("reset");
                                $("#actiontype").text("Save")

                                $('.loadingGIF').hide();
                                sweetAlert("", msg.replace(/&quot;/g, "").replace(/<Br \/>/g, "\n"), "success");
                                Clear();
                              
                            }
                            else {
                                $('.loadingGIF').hide();
                                sweetAlert("", msg.replace(/&quot;/g, "").replace(/<Br \/>/g, "\n"), "error");
                               
                            }
                        }
                    });
                }
                else {
                    sweetAlert("", "Add atleast one Screen Details for Mapped user", "error");
                    $('.loadingGIF').hide();
                }
                // }
            }
        } else
        {
            sweetAlert("", "Pleae Select Username.", "error");
            $('.loadingGIF').hide();
        }
    });


    function Clear() {
        $('#username').val("");
        $('#username').trigger("chosen:updated");
        $('#txtSelectAllScreens').val("");
        $(".checkbox").prop('checked', false);
    };
    $('#btnclear').click(Clear);


});

$('.checkbox').change(function () {
    $(this).attr("value", "true");

});

$('input[type=checkbox]').click(function () {
    var value = $("#username").val();
    if (value != "") {
        if ($(this).is(':checked')) {
            $(".checkbox").prop('checked', true);
        }
        else {
            $(".checkbox").prop('checked', false);
        }
    }
    else {
        var isselect1 = "Please Select User Name to Proceed."
        alert(isselect1);

        $("#txtSelectAllScreens").prop('checked', false);
    }
});

//------------------------------------------------------------------------------------------------------Fetch PageLoad
function BindTab(ResData, type) {

    var currentDate = new Date()
    var day = currentDate.getDate()
    var month = currentDate.getMonth() + 1
    var year = currentDate.getFullYear()
    var currentdate = day + "/" + month + "/" + year;

    var cols = [];
    var cols1 = [];
    var cols1DATA = [];
    var nullvalue;
    var colsresult;
    var finalcolsresult;
    var elements = Array();
    var exampleRecord = ResData[0];
    // TABLE BIND     
    if (type == '0') {
        $('#dynamic-tableUpload').dataTable().fnDestroy();
        cols.length = 0;
        cols1.length = 0;
    }
    //get keys in object. This will only work if your statement remains true that all objects have identical keys
    if (exampleRecord) {
        var keys = Object.keys(exampleRecord);

        //for each key, add a column definition
        keys.forEach(function (k) {
            cols.push({
                title: k,
                data: k,
                targets: k

                //optionally do some type detection here for render function
            });
        });

        $.each(cols, function (index, item) {
            item.title, item.targets
            cols1.push({
                title: item.title,
                targets: index
            });
            cols1DATA.push({
                data: item.title,
            });
            finalcolsresult += 'null' + ',';
        });

        var dyTable = $('#dynamic-tableUpload');

        $('#dynamic-tableUpload').dataTable({
            data: ResData,
            "bAutoWidth": false,
            "bSort": false,
            "ascrollX": "100%",
            "language": { "search": "" },
            "bPaginate": false,
            "aColumns": [

        finalcolsresult,
        { "bSortable": false }
            ],
            "aSorting": [],
            'columnDefs': [{
                'targets': 0,
                'searchable': true,
                'orderable': true,
                'className': 'dt-body-center'
            }],

            columnDefs: cols1,
            columns: cols1DATA,
            dom: 'Bfrtip',
            buttons: [

                    {
                        extend: 'excelHtml5',
                        title: 'User Authentication',
                        text: '<img src="../../Images/excel.png" style="height: 25px;">',
                        footer: false
                    },
                    {
                        extend: 'pdfHtml5',

                        text: '<img src="../../Images/pdf.png" style="height: 25px;">',
                        orientation: 'landscape',
                        pageSize: 'A4',
                        footer: false,
                        title: 'User Authentication'


                    }, {
                        extend: 'print',
                        title: 'User Authentication',
                        text: '<img src="../../Images/print.png" style="height: 25px;">',
                        footer: false
                    }
            ]
        });
    }
    else {
        $('#dynamic-table tbody').remove();
        $('#dynamic-table thead').remove();
        $('#dynamic-table').dataTable({
            "language": {
                "emptyTable": "No records found.."
            },
            'bSort': false,
            'aoColumns': [
                    { sWidth: "100%", bSearchable: false, bSortable: false }
            ],
            "scrollCollapse": false,
            "info": true,
            "paging": true,
            "searching": true
        });


    }
    $(".loader").hide("slow");
}

function BindTable() {
    //var table = document.getElementById("dynamic-tableUpload");
    var cols = [];
    var cols1 = [];
    var cols1DATA = [];
    var nullvalue;
    var colsresult;
    var finalcolsresult;
    $(".loader").show("slow");
    $.ajax({
        url: 'GetUserAuthenticationPageLoad',
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (Result) {

            var pageload = Result.split('|');
            var username = JSON.parse(pageload[0]);

            var resJ = JSON.parse(pageload[1]);
            //  var exampleRecord = resJ[0];

            $("#username").empty().append('<option value="">Select an Option</option>');
            $.each(username, function () {
                $("#username").append($("<option></option>").val(this["USERNAME"]).html(this["USERNAME"]));
                $('#username').trigger("chosen:updated");
            });

            BindTab(resJ, '1');
        }
    });
    $(".loader").hide("slow");
}